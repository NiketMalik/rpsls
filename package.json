{
  "name": "rpsls",
  "description": "Online dispute resolution the traditional way, from the relative safety of your computer.",
  "version": "0.1.0",
  "private": true,
  "homepage": "https://rpsls.niketmalik.com",
  "bugs": {
    "url": "https://github.com/NiketMalik/rpsls/issues"
  },
  "repository": "https://github.com/NiketMalik/rpsls",
  "author": {
    "name": "Niket Malik",
    "email": "niketmalik@gmail.com",
    "url": "https://github.com/NiketMalik"
  },
  "license": "MIT",
  "dependencies": {
    "@emotion/react": "^11.4.1",
    "@emotion/styled": "^11.3.0",
    "classnames": "^2.3.1",
    "framer-motion": "^4.1.17",
    "hyperid": "^2.3.1",
    "ramda": "^0.27.1",
    "react": "^17.0.2",
    "react-bootstrap": "^2.0.0-rc.0",
    "react-dom": "^17.0.2",
    "react-responsive": "^9.0.0-beta.4",
    "use-sound": "^4.0.1"
  },
  "devDependencies": {
    "@emotion/babel-plugin": "^11.3.0",
    "@emotion/babel-preset-css-prop": "^11.2.0",
    "@testing-library/jest-dom": "^5.11.4",
    "@testing-library/react": "^12.1.1",
    "@testing-library/react-hooks": "^7.0.2",
    "@testing-library/user-event": "^13.2.1",
    "@types/gtag.js": "^0.0.7",
    "@types/jest": "^27.0.2",
    "@types/node": "^16.10.2",
    "@types/ramda": "^0.27.45",
    "@types/react": "^17.0.26",
    "@types/react-dom": "^17.0.0",
    "babel-plugin-jsx-remove-data-test-id": "^3.0.0",
    "pre-push": "^0.1.1",
    "react-scripts": "4.0.3",
    "typescript": "^4.1.2"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "coverage": "rm -rf coverage && react-scripts test --coverage --watchAll=false",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "jest": {
    "coverageReporters": [
      "lcov",
      "html"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    },
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx}",
      "!src/index.tsx",
      "!src/test-utils.tsx"
    ]
  },
  "pre-push": [
    "coverage"
  ]
}
